{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Icon } from 'react-native-elements';\n\nvar ChatScreen = function ChatScreen() {\n  var _useState = useState({\n    name: 'John Doe'\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      currentUser = _useState2[0];\n\n  var _useState3 = useState([{\n    sender: 'John Doe',\n    message: 'Hey there!',\n    time: '6:01 PM'\n  }, {\n    sender: 'Robert Henry',\n    message: 'Hello, how are you doing?',\n    time: '6:02 PM'\n  }, {\n    sender: 'John Doe',\n    message: 'I am good, how about you?',\n    time: '6:02 PM'\n  }, {\n    sender: 'John Doe',\n    message: \"\\uD83D\\uDE0A\\uD83D\\uDE07\",\n    time: '6:02 PM'\n  }, {\n    sender: 'Robert Henry',\n    message: \"Can't wait to meet you.\",\n    time: '6:03 PM'\n  }, {\n    sender: 'John Doe',\n    message: \"That's great, when are you coming?\",\n    time: '6:03 PM'\n  }, {\n    sender: 'Robert Henry',\n    message: \"This weekend.\",\n    time: '6:03 PM'\n  }, {\n    sender: 'Robert Henry',\n    message: \"Around 4 to 6 PM.\",\n    time: '6:04 PM'\n  }, {\n    sender: 'John Doe',\n    message: \"Great, don't forget to bring me some mangoes.\",\n    time: '6:05 PM'\n  }, {\n    sender: 'Robert Henry',\n    message: \"Sure!\",\n    time: '6:05 PM'\n  }, {\n    sender: 'Robert Henry',\n    message: \"Great, don't forget to bring me some mangoes.\",\n    time: '6:05 PM'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputMessage = _useState6[0],\n      setInputMessage = _useState6[1];\n\n  function getTime(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  function sendMessage() {\n    if (inputMessage === '') {\n      return setInputMessage('');\n    }\n\n    var t = getTime(new Date());\n    setMessages([].concat(_toConsumableArray(messages), [{\n      sender: currentUser.name,\n      message: inputMessage,\n      time: t\n    }]));\n    setInputMessage('');\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    style: {\n      backgroundColor: '#f2f2ff'\n    },\n    inverted: true,\n    data: JSON.parse(JSON.stringify(messages)).reverse(),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n        style: {\n          marginTop: 6\n        }\n      }, React.createElement(View, {\n        style: {\n          maxWidth: Dimensions.get('screen').width * 0.8,\n          backgroundColor: '#3a6ee8',\n          alignSelf: item.sender === currentUser.name ? 'flex-end' : 'flex-start',\n          marginHorizontal: 10,\n          padding: 10,\n          borderRadius: 8,\n          borderBottomLeftRadius: item.sender === currentUser.name ? 8 : 0,\n          borderBottomRightRadius: item.sender === currentUser.name ? 0 : 8\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#fff',\n          fontSize: 16\n        }\n      }, item.message), React.createElement(Text, {\n        style: {\n          color: '#dfe4ea',\n          fontSize: 14,\n          alignSelf: 'flex-end'\n        }\n      }, item.time))));\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingVertical: 10\n    }\n  }, React.createElement(View, {\n    style: styles.messageInputView\n  }, React.createElement(TextInput, {\n    defaultValue: inputMessage,\n    style: styles.messageInput,\n    placeholder: \"Message\",\n    onChangeText: function onChangeText(text) {\n      return setInputMessage(text);\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      sendMessage();\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.messageSendView,\n    onPress: function onPress() {\n      sendMessage();\n    }\n  }, React.createElement(Icon, {\n    name: \"send\",\n    type: \"material\"\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  headerLeft: {\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  userProfileImage: {\n    height: '100%',\n    aspectRatio: 1,\n    borderRadius: 100\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#f2f2ff'\n  },\n  messageInputView: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginHorizontal: 14,\n    backgroundColor: '#fff',\n    borderRadius: 4\n  },\n  messageInput: {\n    height: 40,\n    flex: 1,\n    paddingHorizontal: 10\n  },\n  messageSendView: {\n    paddingHorizontal: 10,\n    justifyContent: 'center'\n  }\n});\nexport default ChatScreen;","map":{"version":3,"sources":["D:/UzLogistcs/components/ChatScreen/index.js"],"names":["React","useState","useEffect","Icon","ChatScreen","name","currentUser","sender","message","time","messages","setMessages","inputMessage","setInputMessage","getTime","date","hours","getHours","minutes","getMinutes","ampm","strTime","sendMessage","t","Date","Keyboard","dismiss","styles","container","backgroundColor","JSON","parse","stringify","reverse","item","marginTop","maxWidth","Dimensions","get","width","alignSelf","marginHorizontal","padding","borderRadius","borderBottomLeftRadius","borderBottomRightRadius","color","fontSize","paddingVertical","messageInputView","messageInput","text","messageSendView","StyleSheet","create","headerLeft","paddingHorizontal","display","flexDirection","alignItems","userProfileImage","height","aspectRatio","flex","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ScrollView,\r\n  FlatList,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\n\r\nconst ChatScreen = () => {\r\n\r\n  const [currentUser] = useState({\r\n    name: 'John Doe',\r\n  });\r\n\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'John Doe', message: 'Hey there!', time: '6:01 PM' },\r\n    {\r\n      sender: 'Robert Henry',\r\n      message: 'Hello, how are you doing?',\r\n      time: '6:02 PM',\r\n    },\r\n    {\r\n      sender: 'John Doe',\r\n      message: 'I am good, how about you?',\r\n      time: '6:02 PM',\r\n    },\r\n    {\r\n      sender: 'John Doe',\r\n      message: `😊😇`,\r\n      time: '6:02 PM',\r\n    },\r\n    {\r\n      sender: 'Robert Henry',\r\n      message: `Can't wait to meet you.`,\r\n      time: '6:03 PM',\r\n    },\r\n    {\r\n      sender: 'John Doe',\r\n      message: `That's great, when are you coming?`,\r\n      time: '6:03 PM',\r\n    },\r\n    {\r\n      sender: 'Robert Henry',\r\n      message: `This weekend.`,\r\n      time: '6:03 PM',\r\n    },\r\n    {\r\n      sender: 'Robert Henry',\r\n      message: `Around 4 to 6 PM.`,\r\n      time: '6:04 PM',\r\n    },\r\n    {\r\n      sender: 'John Doe',\r\n      message: `Great, don't forget to bring me some mangoes.`,\r\n      time: '6:05 PM',\r\n    },\r\n    {\r\n      sender: 'Robert Henry',\r\n      message: `Sure!`,\r\n      time: '6:05 PM',\r\n    },\r\n    {\r\n      sender: 'Robert Henry',\r\n      message: `Great, don't forget to bring me some mangoes.`,\r\n      time: '6:05 PM',\r\n    }\r\n  ]);\r\n\r\n  const [inputMessage, setInputMessage] = useState('');\r\n\r\n  function getTime(date) {\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    var strTime = hours + ':' + minutes + ' ' + ampm;\r\n    return strTime;\r\n  }\r\n\r\n  function sendMessage() {\r\n    if (inputMessage === '') {\r\n      return setInputMessage('');\r\n    }\r\n    let t = getTime(new Date());\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        sender: currentUser.name,\r\n        message: inputMessage,\r\n        time: t,\r\n      },\r\n    ]);\r\n    setInputMessage('');\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={styles.container}>\r\n        <FlatList\r\n          style={{ backgroundColor: '#f2f2ff' }}\r\n          inverted={true}\r\n          data={JSON.parse(JSON.stringify(messages)).reverse()}\r\n          renderItem={({ item }) => (\r\n            <TouchableWithoutFeedback>\r\n              <View style={{ marginTop: 6 }}>\r\n                <View\r\n                  style={{\r\n                    maxWidth: Dimensions.get('screen').width * 0.8,\r\n                    backgroundColor: '#3a6ee8',\r\n                    alignSelf:\r\n                      item.sender === currentUser.name\r\n                        ? 'flex-end'\r\n                        : 'flex-start',\r\n                    marginHorizontal: 10,\r\n                    padding: 10,\r\n                    borderRadius: 8,\r\n                    borderBottomLeftRadius:\r\n                      item.sender === currentUser.name ? 8 : 0,\r\n                    borderBottomRightRadius:\r\n                      item.sender === currentUser.name ? 0 : 8,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: '#fff',\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {item.message}\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: '#dfe4ea',\r\n                      fontSize: 14,\r\n                      alignSelf: 'flex-end',\r\n                    }}\r\n                  >\r\n                    {item.time}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          )}\r\n        />\r\n\r\n        <View style={{ paddingVertical: 10 }}>\r\n          <View style={styles.messageInputView}>\r\n            <TextInput\r\n              defaultValue={inputMessage}\r\n              style={styles.messageInput}\r\n              placeholder='Message'\r\n              onChangeText={(text) => setInputMessage(text)}\r\n              onSubmitEditing={() => {\r\n                sendMessage();\r\n              }}\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.messageSendView}\r\n              onPress={() => {\r\n                sendMessage();\r\n              }}\r\n            >\r\n              <Icon name='send' type='material' />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headerLeft: {\r\n    paddingVertical: 4,\r\n    paddingHorizontal: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  userProfileImage: { height: '100%', aspectRatio: 1, borderRadius: 100 },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f2f2ff',\r\n  },\r\n  messageInputView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginHorizontal: 14,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 4,\r\n  },\r\n  messageInput: {\r\n    height: 40,\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n  },\r\n  messageSendView: {\r\n    paddingHorizontal: 10,\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default ChatScreen\r\n"]},"metadata":{},"sourceType":"module"}