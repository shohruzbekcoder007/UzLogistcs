{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Icon } from 'react-native-elements';\nimport axios from \"./../../baseUrl\";\n\nvar Reg = function Reg(_ref) {\n  var userUpdate = _ref.userUpdate;\n  var email = \"\";\n  var password = \"\";\n\n  var handleLogin = function handleLogin() {\n    axios.post(\"/user/login\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log(response.body);\n      userUpdate(response.body);\n    }).catch(function (error) {\n      console.log({\n        errorMessage: error.toString()\n      });\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.bigCircle\n  }), React.createElement(View, {\n    style: styles.smallCircle\n  }), React.createElement(View, {\n    style: styles.centerizedView\n  }, React.createElement(View, {\n    style: styles.authBox\n  }, React.createElement(View, {\n    style: styles.logoBox\n  }, React.createElement(Icon, {\n    color: \"#fff\",\n    name: \"comments\",\n    type: \"font-awesome\",\n    size: 50\n  })), React.createElement(Text, {\n    style: styles.loginTitleText\n  }, \"Login\"), React.createElement(View, {\n    style: styles.hr\n  }), React.createElement(View, {\n    style: styles.inputBox\n  }, React.createElement(Text, {\n    style: styles.inputLabel\n  }, \"Ismingiz\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      email = text;\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox\n  }, React.createElement(Text, {\n    style: styles.inputLabel\n  }, \"Familiyangiz\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      password = text;\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox\n  }, React.createElement(Text, {\n    style: styles.inputLabel\n  }, \"Otangizning ismi\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      password = text;\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox\n  }, React.createElement(Text, {\n    style: styles.inputLabel\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.input,\n    autoCapitalize: false,\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    onChangeText: function onChangeText(text) {\n      email = text;\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginButton\n  }, React.createElement(Text, {\n    style: styles.loginButtonText,\n    onPress: handleLogin\n  }, \"Registration\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  bigCircle: {\n    width: Dimensions.get('window').height * 0.7,\n    height: Dimensions.get('window').height * 0.7,\n    backgroundColor: '#ff6b81',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * 0.25,\n    top: -50\n  },\n  smallCircle: {\n    width: Dimensions.get('window').height * 0.4,\n    height: Dimensions.get('window').height * 0.4,\n    backgroundColor: '#ff7979',\n    borderRadius: 1000,\n    position: 'absolute',\n    bottom: Dimensions.get('window').width * -0.2,\n    right: Dimensions.get('window').width * -0.3\n  },\n  centerizedView: {\n    width: '100%',\n    top: '15%'\n  },\n  authBox: {\n    width: '80%',\n    backgroundColor: '#fafafa',\n    borderRadius: 20,\n    alignSelf: 'center',\n    paddingHorizontal: 14,\n    paddingBottom: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  logoBox: {\n    width: 100,\n    height: 100,\n    backgroundColor: '#eb4d4b',\n    borderRadius: 1000,\n    alignSelf: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: -50,\n    marginBottom: -50,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  loginTitleText: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginTop: 10\n  },\n  hr: {\n    width: '100%',\n    height: 0.5,\n    backgroundColor: '#444',\n    marginTop: 6\n  },\n  inputBox: {\n    marginTop: 10\n  },\n  inputLabel: {\n    fontSize: 18,\n    marginBottom: 6\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    backgroundColor: '#dfe4ea',\n    borderRadius: 4,\n    paddingHorizontal: 10\n  },\n  loginButton: {\n    backgroundColor: '#ff4757',\n    marginTop: 10,\n    paddingVertical: 10,\n    borderRadius: 4\n  },\n  loginButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  registerText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  forgotPasswordText: {\n    textAlign: 'center',\n    marginTop: 12,\n    fontSize: 16\n  }\n});\nexport default Reg;","map":{"version":3,"sources":["D:/UzLogistcs/components/Reg/index.js"],"names":["React","Icon","axios","Reg","userUpdate","email","password","handleLogin","post","then","response","console","log","body","catch","error","errorMessage","toString","Keyboard","dismiss","styles","container","bigCircle","smallCircle","centerizedView","authBox","logoBox","loginTitleText","hr","inputBox","inputLabel","input","text","loginButton","loginButtonText","StyleSheet","create","flex","position","width","Dimensions","get","height","backgroundColor","borderRadius","right","top","bottom","alignSelf","paddingHorizontal","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","display","alignItems","justifyContent","marginBottom","fontSize","fontWeight","marginTop","paddingVertical","color","textAlign","registerText","forgotPasswordText"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport axios from './../../baseUrl'\r\n\r\nconst Reg = ({userUpdate}) => {\r\n\r\n  let email = ``;\r\n  let password = ``;\r\n\r\n  const handleLogin = () => {\r\n    axios.post(\r\n      `/user/login`,\r\n      {\r\n        email: email,\r\n        password: password\r\n      }\r\n    )\r\n    .then((response) => {\r\n      console.log(response.body);\r\n      userUpdate(response.body);\r\n    })\r\n    .catch((error) => {\r\n      console.log({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={styles.container}>\r\n        <View style={styles.bigCircle}></View>\r\n        <View style={styles.smallCircle}></View>\r\n        <View style={styles.centerizedView}>\r\n          <View style={styles.authBox}>\r\n            <View style={styles.logoBox}>\r\n              <Icon\r\n                color='#fff'\r\n                name='comments'\r\n                type='font-awesome'\r\n                size={50}\r\n              />\r\n            </View>\r\n            <Text style={styles.loginTitleText}>Login</Text>\r\n            <View style={styles.hr}></View>\r\n            <View style={styles.inputBox}>\r\n              <Text style={styles.inputLabel}>Ismingiz</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                // autoCapitalize={false}\r\n                // textContentType='Ismingiz'\r\n                onChangeText={(text) => {email = text}}\r\n              />\r\n            </View>\r\n            <View style={styles.inputBox}>\r\n              <Text style={styles.inputLabel}>Familiyangiz</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                // autoCapitalize={false}\r\n                // textContentType='Familiyangiz'\r\n                onChangeText={(text) => {password = text}}\r\n              />\r\n            </View>\r\n            <View style={styles.inputBox}>\r\n              <Text style={styles.inputLabel}>Otangizning ismi</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                // autoCapitalize={false}\r\n                // textContentType='Otangizning ismi'\r\n                onChangeText={(text) => {password = text}}\r\n              />\r\n            </View>\r\n            <View style={styles.inputBox}>\r\n              <Text style={styles.inputLabel}>Email</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                autoCapitalize={false}\r\n                keyboardType='email-address'\r\n                textContentType='emailAddress'\r\n                onChangeText={(text) => {email = text}}\r\n              />\r\n            </View>\r\n            <TouchableOpacity style={styles.loginButton}>\r\n              <Text\r\n                style={styles.loginButtonText}\r\n                onPress={handleLogin}\r\n              >\r\n                Registration\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    position: 'relative',\r\n  },\r\n  bigCircle: {\r\n    width: Dimensions.get('window').height * 0.7,\r\n    height: Dimensions.get('window').height * 0.7,\r\n    backgroundColor: '#ff6b81',\r\n    borderRadius: 1000,\r\n    position: 'absolute',\r\n    right: Dimensions.get('window').width * 0.25,\r\n    top: -50,\r\n  },\r\n  smallCircle: {\r\n    width: Dimensions.get('window').height * 0.4,\r\n    height: Dimensions.get('window').height * 0.4,\r\n    backgroundColor: '#ff7979',\r\n    borderRadius: 1000,\r\n    position: 'absolute',\r\n    bottom: Dimensions.get('window').width * -0.2,\r\n    right: Dimensions.get('window').width * -0.3,\r\n  },\r\n  centerizedView: {\r\n    width: '100%',\r\n    top: '15%',\r\n  },\r\n  authBox: {\r\n    width: '80%',\r\n    backgroundColor: '#fafafa',\r\n    borderRadius: 20,\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 14,\r\n    paddingBottom: 30,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  logoBox: {\r\n    width: 100,\r\n    height: 100,\r\n    backgroundColor: '#eb4d4b',\r\n    borderRadius: 1000,\r\n    alignSelf: 'center',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    top: -50,\r\n    marginBottom: -50,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1.41,\r\n    elevation: 2,\r\n  },\r\n  loginTitleText: {\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n  },\r\n  hr: {\r\n    width: '100%',\r\n    height: 0.5,\r\n    backgroundColor: '#444',\r\n    marginTop: 6,\r\n  },\r\n  inputBox: {\r\n    marginTop: 10,\r\n  },\r\n  inputLabel: {\r\n    fontSize: 18,\r\n    marginBottom: 6,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    backgroundColor: '#dfe4ea',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 10,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#ff4757',\r\n    marginTop: 10,\r\n    paddingVertical: 10,\r\n    borderRadius: 4,\r\n  },\r\n  loginButtonText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  registerText: {\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n    fontSize: 16,\r\n  },\r\n  forgotPasswordText: {\r\n    textAlign: 'center',\r\n    marginTop: 12,\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Reg; "]},"metadata":{},"sourceType":"module"}