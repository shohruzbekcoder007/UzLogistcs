{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\n\nfunction addMinutes(date, minutesToAdd) {\n  return new Date(date.valueOf() + minutesToAdd * 60 * 1000);\n}\n\nvar NativeDatePicker = requireNativeComponent(\"DatePickerManager\", DatePickerAndroid, {\n  nativeOnly: {\n    onChange: true\n  }\n});\nvar height = 180;\nvar timeModeWidth = 240;\nvar defaultWidth = 310;\n\nvar DatePickerAndroid = function (_React$PureComponent) {\n  _inherits(DatePickerAndroid, _React$PureComponent);\n\n  var _super = _createSuper(DatePickerAndroid);\n\n  function DatePickerAndroid() {\n    var _this;\n\n    _classCallCheck(this, DatePickerAndroid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getProps = function () {\n      return _objectSpread(_objectSpread({}, _this.props), {}, {\n        date: _this._date(),\n        minimumDate: _this._minimumDate(),\n        maximumDate: _this._maximumDate(),\n        utc: _this.props.timeZoneOffsetInMinutes !== undefined,\n        style: _this._getStyle()\n      });\n    };\n\n    _this._getStyle = function () {\n      var width = _this.props.mode === 'time' ? timeModeWidth : defaultWidth;\n      return [{\n        width: width,\n        height: height\n      }, _this.props.style];\n    };\n\n    _this._onChange = function (e) {\n      var jsDate = _this._fromIsoWithTimeZoneOffset(e.nativeEvent.date);\n\n      _this.props.onDateChange && _this.props.onDateChange(jsDate);\n\n      if (_this.props.onDateStringChange) {\n        _this.props.onDateStringChange(e.nativeEvent.dateString);\n      }\n    };\n\n    _this._maximumDate = function () {\n      return _this.props.maximumDate && _this._toIsoWithTimeZoneOffset(_this.props.maximumDate);\n    };\n\n    _this._minimumDate = function () {\n      return _this.props.minimumDate && _this._toIsoWithTimeZoneOffset(_this.props.minimumDate);\n    };\n\n    _this._date = function () {\n      return _this._toIsoWithTimeZoneOffset(_this.props.date);\n    };\n\n    _this._fromIsoWithTimeZoneOffset = function (timestamp) {\n      var date = new Date(timestamp);\n      if (_this.props.timeZoneOffsetInMinutes === undefined) return date;\n      return addMinutes(date, -_this.props.timeZoneOffsetInMinutes);\n    };\n\n    _this._toIsoWithTimeZoneOffset = function (date) {\n      if (_this.props.timeZoneOffsetInMinutes === undefined) return date.toISOString();\n      return addMinutes(date, _this.props.timeZoneOffsetInMinutes).toISOString();\n    };\n\n    _this._onConfirm = function (isoDate) {\n      _this.props.onConfirm(_this._fromIsoWithTimeZoneOffset(isoDate));\n    };\n\n    return _this;\n  }\n\n  _createClass(DatePickerAndroid, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.getProps();\n\n      if (props.modal) {\n        if (props.open) {\n          NativeModules.RNDatePicker.openPicker(props, this._onConfirm, this.props.onCancel);\n        }\n\n        return null;\n      }\n\n      return React.createElement(NativeDatePicker, _extends({}, props, {\n        onChange: this._onChange\n      }));\n    }\n  }]);\n\n  return DatePickerAndroid;\n}(React.PureComponent);\n\nexport default DatePickerAndroid;","map":{"version":3,"sources":["D:/UzLogistcs/components/DatePickerAndroid.js"],"names":["React","requireNativeComponent","addMinutes","date","minutesToAdd","Date","valueOf","NativeDatePicker","DatePickerAndroid","nativeOnly","onChange","height","timeModeWidth","defaultWidth","getProps","props","_date","minimumDate","_minimumDate","maximumDate","_maximumDate","utc","timeZoneOffsetInMinutes","undefined","style","_getStyle","width","mode","_onChange","e","jsDate","_fromIsoWithTimeZoneOffset","nativeEvent","onDateChange","onDateStringChange","dateString","_toIsoWithTimeZoneOffset","timestamp","toISOString","_onConfirm","isoDate","onConfirm","modal","open","NativeModules","RNDatePicker","openPicker","onCancel","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { requireNativeComponent, NativeModules } from 'react-native'\r\n\r\nfunction addMinutes(date, minutesToAdd) {\r\n  return new Date(date.valueOf() + minutesToAdd * 60 * 1000)\r\n}\r\n\r\nconst NativeDatePicker = requireNativeComponent(\r\n  `DatePickerManager`,\r\n  DatePickerAndroid,\r\n  { nativeOnly: { onChange: true } }\r\n)\r\n\r\nconst height = 180\r\nconst timeModeWidth = 240\r\nconst defaultWidth = 310\r\n\r\nclass DatePickerAndroid extends React.PureComponent {\r\n  render() {\r\n    const props = this.getProps()\r\n    if (props.modal) {\r\n      if (props.open) {\r\n        NativeModules.RNDatePicker.openPicker(\r\n          props,\r\n          this._onConfirm,\r\n          this.props.onCancel\r\n        )\r\n      }\r\n      return null\r\n    }\r\n\r\n    return <NativeDatePicker {...props} onChange={this._onChange} />\r\n  }\r\n\r\n  getProps = () => ({\r\n    ...this.props,\r\n    date: this._date(),\r\n    minimumDate: this._minimumDate(),\r\n    maximumDate: this._maximumDate(),\r\n    utc: this.props.timeZoneOffsetInMinutes !== undefined,\r\n    style: this._getStyle(),\r\n  })\r\n\r\n  _getStyle = () => {\r\n    const width = this.props.mode === 'time' ? timeModeWidth : defaultWidth\r\n    return [{ width, height }, this.props.style]\r\n  }\r\n\r\n  _onChange = (e) => {\r\n    const jsDate = this._fromIsoWithTimeZoneOffset(e.nativeEvent.date)\r\n    this.props.onDateChange && this.props.onDateChange(jsDate)\r\n    if (this.props.onDateStringChange) {\r\n      this.props.onDateStringChange(e.nativeEvent.dateString)\r\n    }\r\n  }\r\n\r\n  _maximumDate = () =>\r\n    this.props.maximumDate &&\r\n    this._toIsoWithTimeZoneOffset(this.props.maximumDate)\r\n\r\n  _minimumDate = () =>\r\n    this.props.minimumDate &&\r\n    this._toIsoWithTimeZoneOffset(this.props.minimumDate)\r\n\r\n  _date = () => this._toIsoWithTimeZoneOffset(this.props.date)\r\n\r\n  _fromIsoWithTimeZoneOffset = (timestamp) => {\r\n    const date = new Date(timestamp)\r\n    if (this.props.timeZoneOffsetInMinutes === undefined) return date\r\n    return addMinutes(date, -this.props.timeZoneOffsetInMinutes)\r\n  }\r\n\r\n  _toIsoWithTimeZoneOffset = (date) => {\r\n    if (this.props.timeZoneOffsetInMinutes === undefined)\r\n      return date.toISOString()\r\n\r\n    return addMinutes(date, this.props.timeZoneOffsetInMinutes).toISOString()\r\n  }\r\n\r\n  _onConfirm = (isoDate) => {\r\n    this.props.onConfirm(this._fromIsoWithTimeZoneOffset(isoDate))\r\n  }\r\n}\r\n\r\nexport default DatePickerAndroid"]},"metadata":{},"sourceType":"module"}